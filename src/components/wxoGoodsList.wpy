<style lang="less">

</style>
<template>
    <view class="wxo-goods">
        <view class="items" wx:for="{{ item.Good }}" wx:key="index" wx:for-item="goods" @tap.stop="redirect({{ goods }})">
            <image src="{{goods.ImageUrl}}" mode="widthFix"></image>
            <view class="title">{{ goods.Title }}</view>
            <view class="desc">
                <view class="price"><text class="dollar">Â¥</text>{{ goods.Price }}</view>
                <view class="i-cart"><i class="icon icon-gouwuche"></i></view>
            </view>
        </view>
    </view>
</template>

<script>
    import wepy from 'wepy'
    import request from '../utils/request'
    import mixin from '../mixins/mixin'

    export default class wxoGoodsList extends wepy.component {
        props = {
            item: { type: Object, twoWay: true }
        }

        mixins = [mixin]

        data = {}

        computed = {}

        methods = {}

        events = {
            initItem(options){
                var self = this;
                var items = options.filter(function(item){ return item.Type === 'min_goods_list'});
                items.forEach(function(item){
                    item.Id && self.initGoods(item);
                })
            }
        }

        onLoad() {}

        async initGoods(item){
            var res = await request.post('/product/getList', {
                PageIndex: 1,
                PageSize: parseInt(item.Nums),
                Sort: [{Field: 'CreateTime', Value: 'DESC'}],
                Filter: [
                    {Field:'GzNo',Value: this.mini.GzNo,Operator:'=',Connector:'and'},
                    {Field:'GroupId',Value: item.Id,Operator:'=',Connector:'and'},
                    {Field:'Type',Value: 2,Operator: '=',Connector:'and'}
                ]
            }, {showLoading: false});
            if(res.IsSuccess){
                item.Good = res.TModel;
                this.initPrice(item);
            }
        }

        async initPrice(item){
            var ids = item.Good.map(function(good){ return good.Id });
            var res = await request.post('/product/getPriceList', {GzNo: this.mini.GzNo, ShopStyleId: ids}, {showLoading: false});
            if(res.IsSuccess){
                res.TModel.forEach(function(data){
                    item.Good.forEach(function(good){
                        if(data.ShopStyleId == good.Id){
                            good.Price = data.Price;
                            good.VipPrice = data.VipPrice;
                            good.ListPrice = data.ListPrice;
                            good.GId = data.GId;
                        }
                    })
                });
            }
        }

    }
</script>
